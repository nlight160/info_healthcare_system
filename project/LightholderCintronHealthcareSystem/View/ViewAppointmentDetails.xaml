<ContentDialog
    x:Class="LightholderCintronHealthcareSystem.View.ViewAppointmentDetails"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    mc:Ignorable="d"
    Title="Visit Details"
    PrimaryButtonText="Close"
    PrimaryButtonClick="ContentDialog_PrimaryButtonClick"
    FullSizeDesired="True"
>
    <Grid Width="700" BorderThickness="2">


        <Grid x:Name="appointmentDetailsGrid" Margin="0,0,350,375">
            <TextBlock HorizontalAlignment="Left" Text="Appointment Information" TextWrapping="Wrap" VerticalAlignment="Top"/>

            <controls:DataGrid x:Name="appointmentDataView" IsReadOnly="True" HorizontalAlignment="Left" HeadersVisibility="None" ColumnWidth="175"  AutoGenerateColumns ="False" Height="460" Margin="0,25,0,0" VerticalAlignment="Top">
                <controls:DataGrid.Columns>

                    <controls:DataGridTextColumn
                        Binding="{Binding Key}">
                        <controls:DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                        </controls:DataGridTextColumn.ElementStyle>

                    </controls:DataGridTextColumn>
                    <controls:DataGridTextColumn
                        Binding="{Binding Value}">
                        <controls:DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                        </controls:DataGridTextColumn.ElementStyle>
                    </controls:DataGridTextColumn>


                </controls:DataGrid.Columns>
            </controls:DataGrid>

        </Grid>



        <Grid x:Name="checkupInfo" Margin="350,0,0,375">
            <Button x:Name="makeCheckupButton" Content="Create Checkup" HorizontalAlignment="Right" VerticalAlignment="Bottom" Click="onClickCreateCheckup" Visibility="Visible"/>

            <TextBlock x:Name="checkupTextBlock" HorizontalAlignment="Left" Margin="0,0,0,0" Text="Checkup Information" TextWrapping="Wrap" VerticalAlignment="Top"/>
            <controls:DataGrid x:Name="checkupDataView" IsReadOnly="True" HorizontalAlignment="Center" HeadersVisibility="None"  AutoGenerateColumns ="False" Height="429" Margin="0,25,0,0" VerticalAlignment="Top">
                <controls:DataGrid.Columns>

                    <controls:DataGridTextColumn
                        Width="130"
                        Binding="{Binding Key}">
                        <controls:DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                        </controls:DataGridTextColumn.ElementStyle>

                    </controls:DataGridTextColumn>
                    <controls:DataGridTextColumn
                        Width="320"
                        Binding="{Binding Value}">
                        <controls:DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                        </controls:DataGridTextColumn.ElementStyle>
                    </controls:DataGridTextColumn>


                </controls:DataGrid.Columns>
            </controls:DataGrid>
        </Grid>

        <Grid x:Name="testsGrid" Margin="0,500,0,0">


            <TextBlock HorizontalAlignment="Left" Margin="0,0,0,0" Text="Tests" TextWrapping="Wrap" VerticalAlignment="Top"/>

            <controls:DataGrid x:Name="testDataView" IsReadOnly="True" HorizontalAlignment="Left" AutoGenerateColumns ="False" Height="304" Width="350" Margin="0,25,0,0" VerticalAlignment="Top" SelectionChanged="onTestSelectionChange">
                <controls:DataGrid.Columns>

                    <controls:DataGridTextColumn
                        Header="Test"
                        Width="130"
                        Binding="{Binding TestName}">
                        <controls:DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                        </controls:DataGridTextColumn.ElementStyle>

                    </controls:DataGridTextColumn>
                    <controls:DataGridTextColumn
                        Header="Value"
                        Width="130"
                        Binding="{Binding TestResults}">
                        <controls:DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                        </controls:DataGridTextColumn.ElementStyle>
                    </controls:DataGridTextColumn>
                    <controls:DataGridTextColumn
                        Header="Normal"
                        Width="90"
                        Binding="{Binding IsNormal}">
                        <controls:DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                        </controls:DataGridTextColumn.ElementStyle>
                    </controls:DataGridTextColumn>



                </controls:DataGrid.Columns>
            </controls:DataGrid>
            <Button x:Name="orderTestsButton" Content="Order Tests" VerticalAlignment="Bottom" HorizontalAlignment="Left" Click="onOrderTestsClick"/>
            <Button x:Name="enterTestsButton" Content="Enter Test Result" VerticalAlignment="Bottom" Margin="229,0,0,0">
                <Button.Flyout>
                    <Flyout x:Name="enterTestFlyout">

                        <Grid Width="300" Height="110" BorderThickness="10">
                            <TextBox x:Name="flyoutTextBox" Width="150" HorizontalAlignment="Left" VerticalAlignment="Top" PlaceholderText="Result" TextWrapping="Wrap"/>
                            <CheckBox x:Name="flyoutCheckbox" Content="Is Abnormal" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                            <Button x:Name="flyoutButton" Content="Submit" Height="50" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Click="onEnterTestsClick"/>
                        </Grid>


                    </Flyout>
                </Button.Flyout>
            </Button>

            <TextBox x:Name="finalDiagnosisTextBox"  HorizontalAlignment="Right"  VerticalAlignment="Top" Height="100" Width="300" PlaceholderText="Enter Final diagnosis here." Margin="0,25,10,0"/>
            <Button x:Name="submitFinalDiagnosisButton" Width="300" Content="Submit Final Diagnosis" Margin="386,130,0,0" VerticalAlignment="Top">

                <Button.Flyout>
                    <Flyout x:Name="confirmationFinalDiagnosisFlyout">

                        <Grid Width="300" Height="200" BorderThickness="10">
                            <TextBlock x:Name="confimationFinalDiagnosis" Width="280" HorizontalAlignment="Center" VerticalAlignment="Top" Text="Are you sure you want to submit? Doing so will lock this appointment." TextWrapping="Wrap" Margin="0,10,0,0"/>
                            <CheckBox x:Name="confirmationCheckBox" Content="Yes I am sure" Margin="85,0,0,0"/>
                            <Button x:Name="confirmationButton" Content="Submit" Height="50" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Click="onConfirmationFinalDiagnosis"/>
                        </Grid>


                    </Flyout>
                </Button.Flyout>


            </Button>

            


        </Grid>
    </Grid>
</ContentDialog>
